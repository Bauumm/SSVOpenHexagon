name: CI Linux

# Trigger this workflow on push or pull request
on: [push, pull_request]

jobs:
  build:
    name: Build and test (ubuntu-20.04)

    runs-on: ubuntu-20.04

    env:
      CXXFLAGS: -std=c++2a
      LDFLAGS: -L/usr/local/lib

    steps:
    - uses: actions/checkout@v1
      with:
        submodules: recursive
        
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ninja-build libgl1-mesa-dev libgl-dev libx11-dev libxrandr-dev libudev-dev libopenal-dev libvorbis-dev libflac-dev libxcursor-dev

    - name: ccache
      uses: hendrikmuhs/ccache-action@v1
      with:
        key: ubuntu-20.04-RELEASE

    - name: CMake configure
      run: |
        cd buildlx
        export LD_RUN_PATH="/opt/gcc-latest/lib64"
        cmake -GNinja -DCMAKE_BUILD_TYPE=RELEASE -DSSVOH_HEADLESS_TESTS=1 ..
        
    - name: Build
      run: ninja -C buildlx

    - name: Copy artifacts
      run: |
        cp buildlx/SSVOpenHexagon buildlx/OHWorkshopUploader _RELEASE
        cp buildlx/_deps/sfml-build/lib/libsfml-audio.so.3.0.0 _RELEASE/libsfml-audio.so.3.0
        cp buildlx/_deps/sfml-build/lib/libsfml-graphics.so.3.0.0 _RELEASE/libsfml-graphics.so.3.0
        cp buildlx/_deps/sfml-build/lib/libsfml-network.so.3.0.0 _RELEASE/libsfml-network.so.3.0
        cp buildlx/_deps/sfml-build/lib/libsfml-system.so.3.0.0 _RELEASE/libsfml-system.so.3.0
        cp buildlx/_deps/sfml-build/lib/libsfml-window.so.3.0.0 _RELEASE/libsfml-window.so.3.0
        cp buildlx/_deps/libsodium-cmake-build/libsodium.so _RELEASE
        cp -L buildlx/_deps/zlib-build/libz.so.1 _RELEASE/libz.so.1
        cp buildlx/_deps/imgui-sfml-build/libImGui-SFML.so _RELEASE
        cp buildlx/_deps/luajit-build/src/libluajit.so _RELEASE

    - name: Upload artifacts
      uses: actions/upload-artifact@v1
      with:
        name: OpenHexagon-Linux
        path: _RELEASE

    - name: Run tests
      run: |
        mkdir -p buildlx/test
        cp -R _RELEASE/Packs buildlx/test
        ninja -C buildlx check
      
    - name: Check ldd
      run: |
        ldd buildlx/test/test.Replay.t
